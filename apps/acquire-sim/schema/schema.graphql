type Query {
  isoMessages(
    """Returns the items in the list that come after the specified cursor."""
    after: String

    """Returns the first n items from the list."""
    first: Int

    """Returns the items in the list that come before the specified cursor."""
    before: String

    """Returns the last n items from the list."""
    last: Int
    direction: String
  ): IsoMessageConnection
  transactions(
    """Returns the items in the list that come after the specified cursor."""
    after: String

    """Returns the first n items from the list."""
    first: Int

    """Returns the items in the list that come before the specified cursor."""
    before: String

    """Returns the last n items from the list."""
    last: Int
  ): TransactionConnection
}

"""A connection to a list of items."""
type IsoMessageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [IsoMessageEdge]
  direction: String
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""An edge in a connection."""
type IsoMessageEdge {
  """The item at the end of the edge"""
  node: IsoMessage

  """A cursor for use in pagination"""
  cursor: String!
}

"""Represents a isoMessage"""
type IsoMessage implements Node {
  """The ID of an object"""
  id: ID!
  rawContent: String
  isoResponseCode: String
  direction: String
  transactionId: String
  idempotencyKey: String
  relatedMessage: IsoMessage
  createdAt: String
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""A connection to a list of items."""
type TransactionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TransactionEdge]
}

"""An edge in a connection."""
type TransactionEdge {
  """The item at the end of the edge"""
  node: Transaction

  """A cursor for use in pagination"""
  cursor: String!
}

"""Represents a transaction"""
type Transaction {
  id: ID
  userId: String
  orderRef: String
  status: String
  amount: Int
  createdAt: String
  updatedAt: String
}

type Mutation {
  TransactionAdd(input: TransactionAddInput!): TransactionAddPayload
}

type TransactionAddPayload {
  transaction: Transaction
  clientMutationId: String
}

input TransactionAddInput {
  userId: String!
  orderRef: String!
  amount: Int!
  idempotencyKey: String!
  cardNumber: String!
  cardHolderName: String!
  cardExpiryMonth: String!
  cardExpiryYear: String!
  cardCvv: String!
  clientMutationId: String
}

type Subscription {
  IsoMessageAdded(input: IsoMessageAddedInput!): IsoMessageAddedPayload
}

type IsoMessageAddedPayload {
  isoMessage: IsoMessage
  clientSubscriptionId: String
}

input IsoMessageAddedInput {
  clientSubscriptionId: String
}